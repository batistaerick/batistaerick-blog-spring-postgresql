spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.initialization-mode=always
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.h2.console.enabled=true
#
# SQL INSERT
#
sql.creation.user=INSERT INTO t_user (email, name, password) VALUES ('java@java.com', 'Java', '$2a$12$X9dBo6PQYDoWE/mUtYmXDujuR/GK3..KRmQH8Eysw.TQfIqgd10IC')
sql.creation.role=INSERT INTO t_role (role_name) VALUES ('ROLE_ADMIN'), ('ROLE_USER')
sql.creation.role-user=INSERT INTO t_users_roles VALUES (1, 1)
sql.creation.post=INSERT INTO t_post (body, date, image_url, title, user_id) VALUES ('Body and Body', '2022-11-27 11:10:40.148', 'test.com', 'Some title', 1)
sql.creation.comment=INSERT INTO t_comment (date, text, post_id, user_id) VALUES ('2022-11-27 11:10:40.148', 'Comment', 1, 1)
sql.creation.album=INSERT INTO t_album (image_url, user_id) VALUES ('image.url.com', 1)
#
# SQL TRUNCATE
#
sql.truncate.user=TRUNCATE TABLE public.t_user RESTART IDENTITY CASCADE
sql.truncate.post=TRUNCATE TABLE t_post RESTART IDENTITY CASCADE
sql.truncate.comment=TRUNCATE TABLE t_comment RESTART IDENTITY CASCADE
sql.truncate.album=TRUNCATE TABLE t_album RESTART IDENTITY CASCADE
